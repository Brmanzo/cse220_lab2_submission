import os
import json
import argparse
import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import csv
from matplotlib import cm

labels = ["500.perlbench_r", "502.gcc_r", "503.bwaves_r", "505.mcf_r", "507.cactuBSSN_r", "508.namd_r",
          "510.parest_r", "511.povray_r", "519.lbm_r", "520.omnetpp_r", "521.wrf_r", "523.xalancbmk_r",
          "525.x264_r", "526.blender_r", "527.cam4_r", "531.deepsjeng_r", "538.imagick_r", "541.leela_r",
          "544.nab_r", "548.exchange2_r", "549.fotonik3d_r", "554.roms_r", "557.xz_r", "Average"]

IPC = [[2.15565, 1.80177, 1.77501, 1.73853, 2.15555, 2.16225, 2.16199],\
[0.97039, 0.96859, 0.96877, 0.96883, 0.97468, 0.97273, 0.97295],\
[0.82663, 0.82131, 0.82253, 0.82649, 0.82655, 0.82596, 0.82639],\
[0.66766, 0.61829, 0.63002, 0.63289, 0.69131, 0.69581, 0.69583],\
[0.98395, 0.98406, 0.98395, 0.98395, 0.98392, 0.98395, 0.98407],\
[3.43067, 2.98033, 3.04716, 3.0482,  3.48468, 3.48665, 3.49203],\
[1.62959, 1.60139, 1.62399, 1.62681, 1.63347, 1.63287, 1.63417],\
[2.83219, 2.58262, 2.63457, 2.64509,  2.9495, 2.96493, 2.96644],\
[0.8097,  0.81012, 0.80997, 0.80975, 0.81636, 0.85927, 0.81933],\
[0.95567, 0.91214, 0.91789, 0.91813, 0.96433, 0.96841, 0.96827],\
[1.18899, 1.16625, 1.17735, 1.18062, 1.19063, 1.19053, 1.19067],\
[0.59606, 0.58843, 0.59522,  0.5959, 0.59622, 0.59625, 0.59638],\
[3.81398, 3.61483, 3.72584, 3.73593,  3.8344, 3.82744, 3.83032],\
[2.97388, 2.39468, 2.36576, 2.35273, 2.96438,  3.0062, 3.00966],\
[1.42529, 1.41274, 1.41444, 1.41711, 1.42936, 1.43354, 1.43806],\
[2.34798, 2.18159, 2.23264, 2.23539,  2.3361,  2.3501,  2.3501],\
[4.16681, 4.15403, 4.16681, 4.16681, 4.40411, 4.40413, 4.40413],\
[1.64328, 1.54317, 1.59879, 1.60701, 1.66409, 1.66955, 1.67104],\
[1.50273, 1.40082, 1.45255, 1.48371, 1.50985, 1.51451, 1.52099],\
[3.37244, 3.33979, 3.35311,  3.3537, 3.37244, 3.37244, 3.37244],\
[ 0.8277, 0.82708, 0.82861, 0.82818, 0.83136, 0.82806, 0.82977],\
[1.13396, 1.12971,  1.1311, 1.13037, 1.14677, 1.14324, 1.14085],\
[ 1.3441, 1.25589, 1.28654, 1.30524, 1.37062, 1.38292, 1.38506],
[1.8086652173913043, 1.699549130434783, 1.719244347826087, 1.7213639130434781, 1.831768695652174, 1.8379017391304349, 1.8374321739130437]]

DCM = [[0.011952958, 0.275180937, 0.233125458, 0.256333621, 0.013736424,  0.00815038, 0.008149593],\
[0.979921301, 0.984309495, 0.982873264, 0.982615337,  0.97940193, 0.979072252, 0.977656958], \
[0.191407331, 0.410284321, 0.307565111, 0.186814406,  0.18648175, 0.182312854, 0.181777722],\
[0.149626427, 0.245220687, 0.201071242, 0.196460816, 0.112185523, 0.103026512, 0.103502937],\
[0.999953296, 0.999960296, 0.999953296, 0.999953296, 0.999954496, 0.999953296, 0.999953896],\
[0.074067497, 0.522779995, 0.485535067, 0.487842497, 0.011779013, 0.006438359, 0.006247311],\
[0.580648259, 0.677126091, 0.617917349,  0.61120064, 0.571908473, 0.570014829, 0.569321705],\
[0.094471808, 0.312948348, 0.218082357, 0.207273851, 0.015182257, 0.000880068, 0.000205701],\
[0.267519064,  0.37414041, 0.274198016, 0.267836225, 0.246488021, 0.209878942, 0.209867531],\
[0.091195366, 0.359342556, 0.287335157, 0.286388033, 0.076758745, 0.067975337, 0.067593857],\
[0.047162536, 0.223932989, 0.126787021, 0.106091155, 0.027528524, 0.024534602, 0.023022538],\
[0.317830579, 0.360975249, 0.325711875, 0.323073498, 0.316506268, 0.315213494, 0.315170376],\
[0.02654888, 0.176861479,  0.132260106, 0.129990687, 0.019879943, 0.016024102, 0.015754911],\
[0.011092577, 0.275449046, 0.234632809,  0.23617561, 0.017751985, 0.000980119, 0.000825877],\
[0.384271251, 0.507979726, 0.457466473, 0.445603408, 0.268219568, 0.263457491, 0.264259737],\
[0.010537357, 0.191686135, 0.124042733,  0.11798499, 0.019069573, 0.003022572, 0.002953055],\
[0.500228193, 0.506219641, 0.500401553, 0.500401553, 0.065040939, 0.001574521, 0.001574521],\
[0.018846336, 0.168252933, 0.078930055, 0.069636589, 0.004289437, 0.000792017, 0.000136763],\
[0.017444491, 0.154448635,  0.07280567,  0.02960221, 0.005969665, 0.002278258, 0.000688216],\
[          0, 0.123844258, 0.046747846, 0.033265925,           0,           0,           0],\
[0.190314149, 0.312418975,  0.21738956, 0.205692062,  0.19142745, 0.189814334, 0.189715319],\
[0.393617349, 0.502095772, 0.420853146, 0.418842306, 0.384185303, 0.383936018, 0.384032562],\
[0.047827237, 0.178607963, 0.105959854, 0.076714892, 0.036688697, 0.030046248, 0.029413635],
[0.23506453226086957, 0.3845246059565217, 0.3239845659999999, 0.3119910263913043, 0.19871452104347825, 0.18953811326086956, 0.1892097704782609]]\

def avg_data(data, avg_data):
    for j in range(0,7):
        for k in range(0,23):
            #print("i:" + str(i) + " j:"+ str(j) + " k:" + str(k) + "\n")
            avg_data[j] += data[k][j]
        avg_data[j] = avg_data[j]/23

def plot_data(data, ylabel_name, start_i, end_i , graph_num):
    #print(data)
    colors = ['#800000', '#911eb4', '#4363d8', '#f58231', '#3cb44b', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#e6beff', '#e6194b', '#000075', '#800000', '#9a6324', '#808080', '#ffffff', '#000000']
#    ind = np.arange(4)
    width = 0.18
    fig, ax = plt.subplots(figsize=(14, 4.4), dpi=80)

    idx = 0
    for i in range(start_i, end_i):
        for j in range(0,7):
            if j % 2 == 0:
                ax.bar((idx)*width, data[i][j], width=width, fill=False, hatch='\\\\\\', color=colors[j], edgecolor=colors[j], label=str(labels[i]+"_"+str(j)))
            else:
                ax.bar((idx)*width, data[i][j], width=width, fill=False, hatch='///', color=colors[j], edgecolor=colors[j], label=str(labels[i]+"_"+str(j)))
            idx += 1
            ax.set_xlabel("Configurations")
            ax.set_ylabel(ylabel_name)
        idx += 2

    ticks = np.linspace(0.5, 12, 8)  # Generates 4 evenly spaced values between min and max of x
    ax.set_xticks(ticks)
    ax.set_xticklabels(labels[start_i:end_i], rotation = 27, ha='right')

    ax.grid('x')
    #ax.legend(loc="upper left", ncols=2)
    fig.tight_layout()
    plt.savefig(ylabel_name.replace(" ", "_") +  "_" + str(graph_num) + ".png", format="png", bbox_inches="tight")

DCM_avg = [0,0,0,0,0,0,0]
IPC_avg = [0,0,0,0,0,0,0]

avg_data(DCM, DCM_avg)
avg_data(IPC, IPC_avg)

print("DCM Averages\n")
for j in range(0,7):
    print(str(DCM_avg[j]) + "\n")
print("IPC Averages\n")
for j in range(0,7):
    print(str(IPC_avg[j]) + "\n")

plot_data(IPC, 'IPC', 0, 8, 0)
plot_data(IPC, 'IPC', 8, 16, 1)
plot_data(IPC, 'IPC', 16, 24, 2)
plot_data(DCM, 'DCache Miss Ratio', 0, 8, 0)
plot_data(DCM, 'DCache Miss Ratio', 8, 16, 1)
plot_data(DCM, 'DCache Miss Ratio', 16, 24, 2)

