import os
import json
import argparse
import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import csv
from matplotlib import cm
from matplotlib.patches import Patch

labels = ["500.perlbench_r", "502.gcc_r", "503.bwaves_r", "505.mcf_r", "507.cactuBSSN_r", "508.namd_r",
          "510.parest_r", "511.povray_r", "519.lbm_r", "520.omnetpp_r", "521.wrf_r", "523.xalancbmk_r",
          "525.x264_r", "526.blender_r", "527.cam4_r", "531.deepsjeng_r", "538.imagick_r", "541.leela_r",
          "544.nab_r", "548.exchange2_r", "549.fotonik3d_r", "554.roms_r", "557.xz_r", "Average"]

C_Labels = ["Capacity", "Compulsory", "Conflict"]

Hatches = ['//', 'oo', '\\\\', 'OO', 'xx', 'O.', '*']
#CAPACITY
legend_elements_C = [
    Patch(facecolor='#f58231', edgecolor='#f58231', hatch='///', label='Capacity'),
    Patch(facecolor='#3cb44b', edgecolor='#3cb44b', hatch='///', label='Compulsory'),
    Patch(facecolor='#46f0f0', edgecolor='#46f0f0', hatch='///', label='Conflict')
]

#CAPACITY
DCACHE_MISSES = [[[0.004906185,0.094280451,0.100549566,  0.1213329,0.005470061,0.004541342,0.004541145],\
                  [0.978984713,0.981651552,0.981052922,0.980983963,0.977957802,0.978303592,0.974542693],\
                  [0.141266231,0.208153144,0.184103743,0.139252271,0.136853487, 0.13496622,0.134451511],\
                  [0.124495914,0.180446484,0.172727894,0.171398623,0.076325644,0.075780083,0.076087844],\
                  [0.984329305,0.984333198,0.984328905,0.984328805,0.984329505,0.984329305,0.984329305],\
                  [0.030370344,0.460904268,0.458222048,0.460592338,0.006067067,0.005097486,0.005039236],\
                  [0.580223835,0.593553317,0.591679567,0.591341876,0.568476107,0.569654658,0.568130319],\
                  [0.043988084, 0.20142958, 0.18731293,0.185001081,0.000233915,0.000164888,0.000153475],\
                  [0.223269213,0.252135611,0.226603711,0.223376824,0.186118077,0.165621292,0.165606165],\
                  [0.069297776,0.217402276,0.217235774, 0.21597361,0.048856148,0.047484451,0.047558222],\
                  [0.042999286,0.113812073,0.101287219,0.095728867,0.017904594, 0.02050596,0.019763278],\
                  [0.306230505,0.316192016,0.312134204,0.311801747,0.304725904,0.304503592,0.304491067],\
                  [0.020236786,0.097924253,0.091284398,0.098545482,0.015882498,0.014660349,0.014520559],\
                  [0.004763623,0.129769289,0.160148093,0.153948072,0.001126082,0.000610632,0.000530346],\
                  [0.369571969,0.443086541, 0.43764937,0.434162457,0.247396808,0.249797165,0.247431505],\
                  [0.004920266,0.090232535,0.084991289,0.085431462,0.002342262,0.002026672,0.001994745],\
                  [ 0.49875272, 0.50107009,0.500003592,0.500003592,0.003323829,0.001176581,0.001176581],\
                  [0.016296705,0.044468272,0.045104776,0.046086479,0.000583588,0.000249359,2.88356E-05],\
                  [0.016571208,0.051649737,0.030697809,0.023160091,0.001457655,0.000543543,0.000108165],\
                  [          0,0.005451063,0.007389629,0.010227713,          0,          0,          0],\
                  [0.156289708,0.194974462,0.175936131,0.172028564,0.156962821,0.156067132,0.156188561],\
                  [0.381760594,0.440988379,0.412904757,0.411853924,0.373050491,0.375349861,0.375264566],\
                  [0.035548522,0.086285876, 0.07062002,0.059708662,0.021230906,0.019035179,0.018885496],\
                  [0.2189162387826087, 0.29087802030434784, 0.28408558030434783, 0.2815769305652173, 0.1798554456956522, 0.17871605834782608, 0.1782966791130435]],\
                  #Compulsory
                 [[0.003576307,0.003635949,0.003602728, 0.00360135,0.003575829,0.003575601,0.003575601],\
                  [6.74735E-05,6.74942E-05,6.74811E-05,6.74808E-05,6.74733E-05,6.74733E-05,6.74734E-05],\
                  [0.045602066,0.045777132,0.045749524,0.045585392, 0.04559344,0.045585499,0.045585489],\
                  [0.016171066,0.016274838,0.016215543,0.016210842,0.016152976,0.016143596,0.016145692],\
                  [0.015624291,0.015624298,0.015624291,0.015624291,0.015624291,0.015624291,0.015624291],\
                  [0.001059126,0.001060805,0.001059254,0.001059256,0.001059124,0.001059136,0.001059162],\
                  [ 3.4757E-05,3.49553E-05,3.47613E-05,3.47592E-05,3.47558E-05,3.47546E-05,3.47542E-05],\
                  [5.24053E-05,5.35862E-05, 5.2759E-05,5.26877E-05,5.22704E-05,5.22278E-05,5.22256E-05],\
                  [0.044290191,0.044848658,0.044330216,0.044291649,0.044301649,0.044290138,0.044290138],\
                  [  0.0142005,0.014513695,0.014353614,0.014386511,0.014196341,0.014192706,0.014192673],\
                  [0.000716194,0.000720823,0.000717015, 0.00071649,0.000716174,0.000716107,  0.0007161],\
                  [0.010672049,0.010684951,0.010673147,0.010673738,0.010671986,0.010672121,0.010671774],\
                  [0.001207971,0.001209829,0.001208823,0.001208799,0.001207883,0.001207867,0.001207868],\
                  [0.000302187,0.000304188,0.000302891,0.000302776,0.000296413,0.000292655,0.000290927],\
                  [0.001828258,0.001834798,0.001831005,0.001830142,0.001827211,0.001826936,0.001826964],\
                  [0.000928469,0.000940085,0.000935341,0.000935276,0.000929912,0.000927506,0.000927493],\
                  [0.000397961,0.000397961,0.000397961,0.000397961, 0.00039794, 0.00039794, 0.00039794],\
                  [ 9.2559E-05,9.36613E-05,9.27663E-05,9.25828E-05,9.25501E-05,9.25485E-05,9.25485E-05],\
                  [0.000577334, 0.00058384,0.000578796,0.000577332,0.000577352,0.000577332,0.000577332],\
                  [          0,          0,          0,          0,          0,          0,          0],\
                  [0.031818239,0.031837909,0.031820111,0.031818239,0.031818641,0.031818239,0.031818226],\
                  [ 0.00563623,0.005636216,0.005636088,0.005636037,0.005636063,0.005636397,0.005636054],\
                  [0.007421286,0.007428639,0.007421771,0.007421272,0.007421703,0.007420537,0.007420496],\
                  [0.008794648686956522, 0.008850622217391304, 0.00881329942173913, 0.008805428847826088, 0.008793564243478262, 0.008791809052173914, 0.008791792247826087]],\
                  #Conflict
                 [[0.003470271,0.177255217, 0.12896688,0.131408677,0.004690534,3.38304E-05, 3.2847E-05],\
                  [0.000312925, 0.00187114,0.000758725,0.000557924,0.000132584,1.64318E-06,          0],\
                  [0.003074667,0.156510664,0.076408871,          0,0.003145718,0.000347838,          0],\
                  [0.008954906,0.048490757,0.012119124,0.008843537,0.019724727,0.011189191, 0.01129045],\
                  [          0,2.80027E-06,          0,          0,2.00019E-07,          0,          0],\
                  [0.042638027,0.060814922,0.026253765,0.026190903,0.004652455,0.000282436,0.000148912],\
                  [0.000659225,0.083639932,0.026460293,0.020088529, 0.00371974,0.000742156,0.001343104],\
                  [0.050431319,0.111465181,0.030716668,0.022220082,0.014896071,0.000662952,          0],\
                  [3.32211E-05,0.077033377,0.003299576,  0.0002198,0.016119347,1.57207E-05,          0],\
                  [0.007732112,0.127410012,0.055848693,0.056052502,0.013750606,0.006375427,0.005921515],\
                  [0.003424613,0.109388594,0.024779723,0.009636838, 0.00887375,0.003288815, 0.00243188],\
                  [0.000934091,0.034092022,0.002895786,0.000595176,0.001118171,4.65638E-05,6.82934E-06],\
                  [0.005068584, 0.07770739,0.039770703,0.030233399,0.002789226,0.000155886,2.64839E-05],\
                  [0.006026766,0.145377226,0.074181824,0.081924763,0.016329489,7.68326E-05,4.60419E-06],\
                  [0.013116771,0.063399456,0.018439558,0.009980054,0.018371195,0.011805602,0.015064119],\
                  [0.004688622,0.100513515,0.038116102,0.031618253,0.015797669,6.83938E-05,3.08173E-05],\
                  [0.001077512, 0.00475159,          0,          0,0.061319169,          0,          0],\
                  [0.002457071,   0.123691,0.033731687,0.023456154,  0.0036133, 0.00045011, 1.5379E-05],\
                  [0.000295949,0.102215058,0.041529065,0.005864787,0.003934658,0.001157383,2.71869E-06],\
                  [          0,0.118393195,0.039358217,0.023038212,          0,          0,          0],\
                  [0.000378522,0.084650243,0.007951696,3.98369E-05,0.001551818,          0,          0],\
                  [0.005010199,0.054831936,0.001124702,          0,0.001366501,0.000369524, 0.00042196],\
                  [0.004878063,0.084898362,0.027926645,0.009626007,0.008074051,  0.0036013,0.003106237],\
                  [0.00715927983043478, 0.08471319953347825, 0.030897317521739128, 0.021373714517391302, 0.009737868653, 0.0017683306295652173, 0.001732515496521739]]]\
          
def avg_data(data, avg_data):
    for i in range(0,3):
        for j in range(0,7):
            for k in range(0,23):
                #print("i:" + str(i) + " j:"+ str(j) + " k:" + str(k) + "\n")
                avg_data[i][j] += data[i][k][j]
            avg_data[i][j] = avg_data[i][j]/23


def plot_data(data, ylabel_name, start_i, end_i, graph_num):
    #print(data)
    colors = ['#f58231', '#3cb44b', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#e6beff', '#e6194b', '#000075', '#800000', '#9a6324', '#808080', '#ffffff', '#000000','#800000', '#911eb4', '#4363d8']
#    ind = np.arange(4)
    width = 0.18
    fig, ax = plt.subplots(figsize=(14, 4.4), dpi=80)
    bottom_offset = 0

    idx = 0
    for i in range(start_i, end_i):
        for j in range(0,7):
            for k in range(0,3):
                hatch='\\\\\\' if j % 2 == 0 else '///'
                ax.bar((idx)*width, data[k][i][j], bottom=bottom_offset, width=width, fill=False, hatch=hatch, color=colors[k], edgecolor=colors[k], label=str(labels[i]+"_"+str(j)))
                bottom_offset += data[k][i][j] 
                #print("i: " + str(i) + " j: " + str(j) + " k: " + str(k) + "\n")
            bottom_offset = 0
            idx += 1
            ax.set_xlabel("Configurations")
            ax.set_ylabel(ylabel_name)
        idx += 2


    ticks = np.linspace(0.5, 12, 8)  # Generates 4 evenly spaced values between min and max of x

    ax.set_xticks(ticks)
    ax.set_xticklabels(labels[start_i:end_i], rotation = 27, ha='right')

    ax.grid('x')
    legend1 = ax.legend(handles=legend_elements_C, loc='upper right')
    ax.add_artist(legend1)
    # legend2 = ax.legend(handles=legend_elements_Config, loc='right')
    fig.tight_layout()
    plt.savefig(ylabel_name.replace(" ", "_") +  "_" + str(graph_num) + ".png", format="png", bbox_inches="tight")

average_data = [[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]]

avg_data(DCACHE_MISSES, average_data)


plot_data(DCACHE_MISSES, 'DCache Miss Ratio', 0, 8, 0)
plot_data(DCACHE_MISSES, 'DCache Miss Ratio', 8, 16, 1)
plot_data(DCACHE_MISSES, 'DCache Miss Ratio', 16, 24, 2)

for i in range(0,3):
    if i == 0: print("Capacity\n")
    elif i == 1: print("Compulsory\n")
    else: print("Conflict\n")
    for j in range(0,7):
        print(str(average_data[i][j]) + "\n")
